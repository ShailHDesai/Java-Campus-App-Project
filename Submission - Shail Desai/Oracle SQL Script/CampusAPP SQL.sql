-- Name: Shail Desai 
-- Course: CIT 38800 - 20013
-- CampusApp SQL Script



-- CAMPUS_USERS TABLE CODE 
CREATE TABLE CAMPUS_USERS (
  UserID NUMBER GENERATED BY DEFAULT AS IDENTITY,
  Username VARCHAR2(50) NOT NULL,
  Password VARCHAR2(50) NOT NULL,
  CONSTRAINT PK_CAMPUS_USERS PRIMARY KEY (UserID)
);

SELECT * FROM CAMPUS_USERS;

INSERT INTO CAMPUS_USERS (UserID, Username, Password)
SELECT LEVEL + 20, 'user' || TO_CHAR(LEVEL + 20), 'password' || TO_CHAR(LEVEL + 20)
FROM DUAL
CONNECT BY LEVEL <= 5;



INSERT INTO CAMPUS_USERS (UserID, Username, Password)
SELECT LEVEL + 5, 'user' || TO_CHAR(LEVEL + 5), 'password' || TO_CHAR(LEVEL + 5)
FROM DUAL
CONNECT BY LEVEL <= 15;




ALTER TABLE CAMPUS_USERS
ADD (StudentID VARCHAR2(20));

DESC CAMPUS_USERS;

DELETE FROM CAMPUS_USERS;
DELETE FROM CAMPUS_STUDENTS WHERE UserID IN (SELECT UserID FROM CAMPUS_USERS);


SELECT * FROM CAMPUS_USERS;

SELECT * FROM CAMPUS_STUDENTS;

INSERT INTO CAMPUS_USERS (StudentID, Username, Password) VALUES
('2024401', 'user6', 'password6');
INSERT INTO CAMPUS_USERS (StudentID, Username, Password) VALUES
('2024402', 'user7', 'password7');
INSERT INTO CAMPUS_USERS (StudentID, Username, Password) VALUES
('2024403', 'user8', 'password8');

INSERT INTO CAMPUS_USERS (StudentID, Username, Password) VALUES
('2024403', 'user8', 'password8');



-- CAMPUS_USERS TABLE SAMPLE DATA 
INSERT INTO CAMPUS_USERS (UserID, Username, Password) VALUES
(5, 'user5', 'password5');

INSERT INTO CAMPUS_USERS (UserID, Username, Password) VALUES
(2, 'user2', 'password2');

INSERT INTO CAMPUS_USERS (UserID, Username, Password) VALUES
(3, 'user3', 'password3');


-- CAMPUS_STUDENTS TABLE CODE 
CREATE TABLE CAMPUS_STUDENTS (
  StudentID VARCHAR2(20) NOT NULL,
  UserID NUMBER NOT NULL,
  FirstName VARCHAR2(50),
  LastName VARCHAR2(50),
  AffiliatedSchoolDepartment VARCHAR2(100),
  Major VARCHAR2(50),
  PickupTime VARCHAR2(5),
  DropOffTime VARCHAR2(5),
  CONSTRAINT PK_CAMPUS_STUDENTS PRIMARY KEY (StudentID),
  CONSTRAINT FK_CAMPUS_STUDENTS_USERS FOREIGN KEY (UserID) REFERENCES CAMPUS_USERS(UserID)
);

DROP TRIGGER user_insert;

CREATE OR REPLACE TRIGGER user_insert
BEFORE INSERT ON campus_students
FOR EACH ROW
DECLARE
  user_exists NUMBER;
  random_user_id NUMBER;
BEGIN
  -- Check if the UserID exists in the CAMPUS_USERS table
  SELECT COUNT(*)
  INTO user_exists
  FROM CAMPUS_USERS
  WHERE UserID = :new.UserID;

  IF user_exists = 0 THEN
    -- Select a random UserID between 1 and 20 from CAMPUS_USERS
    SELECT UserID INTO random_user_id FROM (
      SELECT UserID FROM CAMPUS_USERS
      WHERE UserID BETWEEN 1 AND 20
      ORDER BY DBMS_RANDOM.VALUE
    ) WHERE ROWNUM = 1;

    -- Assign the random UserID to the new student record
    :new.UserID := random_user_id;
  END IF;
END;










SELECT * FROM CAMPUS_STUDENTS;

-- CAMPUS_STUDENTS TABLE SAMPLE DATA 
-- Sample data for CAMPUS_STUDENTS table
INSERT INTO CAMPUS_STUDENTS (StudentID, UserID, FirstName, LastName, AffiliatedSchoolDepartment, Major, PickupTime, DropOffTime) VALUES
('1234567890', 1, 'John', 'Doe', 'Engineering', 'Computer Science', '08:00', '16:00');

INSERT INTO CAMPUS_STUDENTS (StudentID, UserID, FirstName, LastName, AffiliatedSchoolDepartment, Major, PickupTime, DropOffTime) VALUES
('2345678901', 2, 'Jane', 'Smith', 'Business', 'Finance', '09:00', '17:00');

INSERT INTO CAMPUS_STUDENTS (StudentID, UserID, FirstName, LastName, AffiliatedSchoolDepartment, Major, PickupTime, DropOffTime) VALUES
('3456789012', 3, 'Alice', 'Johnson', 'Medicine', 'Pre-Med', '07:30', '15:30');

SELECT * FROM CAMPUS_STUDENTS;

DESC CAMPUS_STUDENTS;


SELECT * FROM PAYMENT_DETAILS;

-- PAYMENT_DETAILS TABLE CODE
PAYMENT_DETAILS (
  PAYMENTID NUMBER NOT NULL,
  STUDENTID VARCHAR2(20) NOT NULL,
  AMOUNT NUMBER(10,2),
  PAYMENTDATE DATE,
  PAYMENTMETHOD VARCHAR2(50),
  FIRSTNAME VARCHAR2(50),
  LASTNAME VARCHAR2(50),
  EXPIRYDATE VARCHAR2(5),
  CARDNUMBER VARCHAR2(16),
  CVV VARCHAR2(3)
);

SELECT * FROM PAYMENT_DETAILS;


ALTER TABLE PAYMENT_DETAILS
ADD (FirstName VARCHAR2(50),
     LastName VARCHAR2(50));

ALTER TABLE PAYMENT_DETAILS
ADD ExpiryDate VARCHAR2(5);

ALTER TABLE PAYMENT_DETAILS
ADD CardNumber VARCHAR2(16);

DESC PAYMENT_DETAILS;

ALTER TABLE PAYMENT_DETAILS
ADD CVV VARCHAR2(3);

SELECT * FROM CAMPUS_STUDENTS;



-- PAYMENT_DETAILS TABLE SAMPLE DATA 
-- Sample data for PAYMENT_DETAILS table
INSERT INTO PAYMENT_DETAILS (StudentID, Amount, PaymentDate, PaymentMethod) VALUES
('1234567890', 100.00, TO_DATE('2024-04-10', 'YYYY-MM-DD'), 'Credit Card');

INSERT INTO PAYMENT_DETAILS (StudentID, Amount, PaymentDate, PaymentMethod) VALUES
('2345678901', 150.50, TO_DATE('2024-04-11', 'YYYY-MM-DD'), 'PayPal');

INSERT INTO PAYMENT_DETAILS (StudentID, Amount, PaymentDate, PaymentMethod) VALUES
('3456789012', 200.75, TO_DATE('2024-04-12', 'YYYY-MM-DD'), 'Debit Card');


-- CAMPUS ROUTES TABLE CODE 
CREATE TABLE CAMPUS_ROUTES (
  RouteID NUMBER GENERATED BY DEFAULT AS IDENTITY,
  RouteName VARCHAR2(50) NOT NULL,
  CONSTRAINT PK_CAMPUS_ROUTES PRIMARY KEY (RouteID)
);

-- CAMPUS_ROUTES TABLE SAMPLE DATA
-- Sample data for CAMPUS_ROUTES table
INSERT INTO CAMPUS_ROUTES (RouteName) VALUES
('Route A');

INSERT INTO CAMPUS_ROUTES (RouteName) VALUES
('Route B');

INSERT INTO CAMPUS_ROUTES (RouteName) VALUES
('Route C');


-- USER_RECEIPT TABLE CODE
CREATE TABLE USER_RECEIPT (
  ReceiptID NUMBER GENERATED BY DEFAULT AS IDENTITY,
  PaymentID NUMBER NOT NULL,
  ReceiptDate DATE NOT NULL,
  Description VARCHAR2(255),
  CONSTRAINT PK_USER_RECEIPT PRIMARY KEY (ReceiptID),
  CONSTRAINT FK_USER_RECEIPT_PAYMENT_DETAILS FOREIGN KEY (PaymentID) REFERENCES PAYMENT_DETAILS(PaymentID)
);

-- USER_RECEIPT TABLE SAMPLE DATA 

SELECT * FROM USER_RECEIPT

DROP TABLE USER_RECEIPT;

-- Sample data for USER_RECEIPT table
INSERT INTO USER_RECEIPT (PaymentID, ReceiptDate, Description) VALUES
(1, TO_DATE('2024-04-10', 'YYYY-MM-DD'), 'Payment Made');

INSERT INTO USER_RECEIPT (PaymentID, ReceiptDate, Description) VALUES
(2, TO_DATE('2024-04-11', 'YYYY-MM-DD'), 'Payment Received');

INSERT INTO USER_RECEIPT (PaymentID, ReceiptDate, Description) VALUES
(3, TO_DATE('2024-04-12', 'YYYY-MM-DD'), 'Confirmed');


CREATE TABLE USER_RECEIPT (
  ReceiptID VARCHAR2(255) NOT NULL,
  PaymentID NUMBER NOT NULL,
  ReceiptDate DATE NOT NULL,
  Description VARCHAR2(255),
  CONSTRAINT PK_USER_RECEIPT PRIMARY KEY (ReceiptID),
  CONSTRAINT FK_USER_RECEIPT_PAYMENT_DETAILS FOREIGN KEY (PaymentID) REFERENCES PAYMENT_DETAILS(PaymentID)
);


SELECT * FROM USER_RECEIPT;

SELECT * FROM CAMPUS_ROUTES;

ALTER TABLE USER_RECEIPT
ADD BarcodeID VARCHAR2(50);

DESC USER_RECEIPT;

-- DROP TABLE USER_RECEIPT;



CREATE TABLE ROUTES (
  RouteID VARCHAR2(10) NOT NULL,
  RouteName VARCHAR2(50) NOT NULL,
  PricePerMonth NUMBER(10,2) NOT NULL,
  CONSTRAINT PK_ROUTES PRIMARY KEY (RouteID)
);

-- Insert statement for ROUTE A (CIT to SCI)
INSERT INTO ROUTES (RouteID, RouteName, PricePerMonth) VALUES ('A', 'CIT to SCI', 50);

-- Insert statement for ROUTE B (SCI to ENG)
INSERT INTO ROUTES (RouteID, RouteName, PricePerMonth) VALUES ('B', 'SCI to ENG', 55);

-- Insert statement for ROUTE C (ENG to MED)
INSERT INTO ROUTES (RouteID, RouteName, PricePerMonth) VALUES ('C', 'ENG to MED', 60);

-- Insert statement for ROUTE D (MED to CIT)
INSERT INTO ROUTES (RouteID, RouteName, PricePerMonth) VALUES ('D', 'MED to CIT', 70);

-- Create the STUDENT_ROUTES table to record student IDs and their chosen routes

SELECT * FROM STUDENT_ROUTES;

SELECT * FROM CAMPUS_STUDENTS;

CREATE TABLE STUDENT_ROUTES (
    StudentID INT,
    RouteID INT,
    RouteType VARCHAR(50),
    PricePerSemester DECIMAL(5, 2)
);

INSERT INTO STUDENT_ROUTES (StudentID, RouteID, RouteType, PricePerSemester) VALUES
(2024107, 1, 'CIT to ENG', 40.00);
INSERT INTO STUDENT_ROUTES (StudentID, RouteID, RouteType, PricePerSemester) VALUES
(2024108, 2, 'ENG to SCI', 45.50);
INSERT INTO STUDENT_ROUTES (StudentID, RouteID, RouteType, PricePerSemester) VALUES
(2024109, 3, 'SCI to MED', 37.25);
INSERT INTO STUDENT_ROUTES (StudentID, RouteID, RouteType, PricePerSemester) VALUES
(2024105, 4, 'MED to CIT', 48.75);
INSERT INTO STUDENT_ROUTES (StudentID, RouteID, RouteType, PricePerSemester) VALUES
(2024111, 1, 'CIT to ENG', 42.00);



SELECT * FROM STUDENT_ROUTES;

SELECT * FROM CAMPUS_STUDENTS;

DELETE FROM STUDENT_ROUTES where StudentID = '2024110';

INSERT INTO STUDENT_ROUTES (StudentID, RouteID, RouteType, PricePerSemester) VALUES
(2024112, 3, 'ENG to CIT', 41.50);



SELECT * FROM CAMPUS_STUDENTS;
SELECT * FROM PAYMENT_DETAILS;
SELECT * FROM USER_RECEIPT;

SELECT * FROM USERS;

ALTER TABLE CAMPUS_USERS
DROP COLUMN StudentID;


DELETE FROM CAMPUS_STUDENTS
WHERE StudentID = '2024107';

SELECT * FROM PAYMENT_DETAILS;

SELECT *
FROM user_constraints
WHERE table_name = 'CAMPUS_STUDENTS';






DROP TRIGGER USER_INSERT;